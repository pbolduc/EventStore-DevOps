{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used when provisioning virtual machines"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "ResourceGroup",
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "East Asia",
        "Southeast Asia",
        "West Europe",
        "North Europe"
      ],
      "defaultValue": "ResourceGroup",
      "metadata": {
        "description": "Location where resources will be provisioned.  A value of 'ResourceGroup' will deploy the resource to the same location of the resource group the resources are provisioned into"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "es-vnet",
      "metadata": {
        "description": "Virtual Network"
      }
    },
    "OS": {
      "type": "string",
      "defaultValue": "windows",
      "allowedValues": [
        "ubuntu",
        "windows"
      ],
      "metadata": {
        "description": "The operating system to deploy Event Store cluster on"
      }
    },

    "jumpbox": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Optionally add a virtual machine to the deployment which you can use to connect and manage virtual machines on the internal network"
      }
    },

    "vmEventStoreNodeCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5,
        7,
        9
      ],
      "metadata": {
        "description": "Number of Event Store client nodes to provision"
      }
    },

    "vmSizeEventStoreNode": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A7",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS13"
      ],
      "metadata": {
        "description": "Size of the Event Store data nodes"
      }
    },
    "vmEventStoreDataDiskSize": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "Size of each data disk attached to data nodes in (Gb). You can only pool disks that have 4GB of contiguous unallocated space."
      }
    },
    "esVersion": {
      "type": "string",
      "defaultValue": "3.4.0",
      "allowedValues": [
        "3.4.0",
        "3.3.1",
        "3.3.0",
        "3.2.2",
        "3.2.1",
        "3.2.0",
        "3.1.0",
        "3.0.5",
        "3.0.3",
        "3.0.2",
        "3.0.1",
        "3.0.0"
      ],
      "metadata": {
        "description": "Event Store version to install"
      }
    }
  },
  "variables": {
    "templateBaseUrl": "https://raw.githubusercontent.com/agconnections/EventStore-DevOps/master/azure-resource-manager/EventStoreCluster/Templates/",
    "locationMap": {
      "ResourceGroup": "[resourceGroup().location]",
      "West US": "[parameters('location')]",
      "East US": "[parameters('location')]",
      "East US 2": "[parameters('location')]",
      "Central US": "[parameters('location')]",
      "South Central US": "[parameters('location')]",
      "North Central US": "[parameters('location')]",
      "East Asia": "[parameters('location')]",
      "Southeast Asia": "[parameters('location')]",
      "West Europe": "[parameters('location')]",
      "North Europe": "[parameters('location')]"
    },
    "location": "[variables('locationMap')[parameters('location')]]",
    "storageAccountPrefix": "esdata",
    "storageAccountNameShared": "[concat(variables('storageAccountPrefix'), 's', uniqueString(resourceGroup().id, deployment().name))]",
    "networkSettings": {
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
	  "networkSecurityGroupName": "[concat(parameters('virtualNetworkName'), '-nsg')]",
      "addressPrefix": "10.0.0.0/16",
      "subnet": {
        "eventstore": {
          "name": "eventstore",
          "prefix": "10.0.1.0/28",
          "networkPrefix": "10.0.1",
          "vnet": "[parameters('virtualNetworkName')]"
        }
      }
    },
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
    "jumpboxTemplateYes": "jumpbox-resources.json",
    "jumpboxTemplateNo": "empty-resources.json",
    "jumpboxTemplateUrl": "[concat(variables('templateBaseUrl'), variables(concat('jumpboxTemplate',parameters('jumpbox'))))]",
    "windowsScripts": [
      "[concat(variables('templateBaseUrl'), 'create-data-disks.ps1')]",
      "[concat(variables('templateBaseUrl'), 'install-eventstore.ps1')]"
    ],
    "windowsSettings": {
      "imageReference": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "managementPort": "3389",
      "extentionSettings": {
        "createdatadisks": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.4",
          "settings": {
            "fileUris": [ "[concat(variables('templateBaseUrl'), 'create-data-disks.ps1')]" ],
            "commandToExecute": "powershell.exe -File create-data-disks.ps1"
          }
        },
        "eventstore": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.4",
          "settings": {
            "fileUris": [ "[concat(variables('templateBaseUrl'), 'install-eventstore.ps1')]" ],
            "commandToExecute": "powershell.exe -File install-eventstore.ps1"
          }
        }
      }
    },
    "osSettings": "[variables(concat(parameters('OS'), 'Settings'))]",
    "virtualMachineSkuSettings": {
      "Standard_D1": {
        "dataDisks": 2,
        "nodesPerStorageAccount": 6,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "dataDisks": 4,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3": {
        "dataDisks": 8,
        "nodesPerStorageAccount": 3,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_DS1": {
        "dataDisks": 2,
        "nodesPerStorageAccount": 6,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "dataDisks": 4,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "dataDisks": 8,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_A2": {
        "dataDisks": 4,
        "nodesPerStorageAccount": 6,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "dataDisks": 8,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Standard_LRS"
      }
    },
    "eventStoreClusterNodesPerStorageAccount": "[variables('virtualMachineSkuSettings')[parameters('vmSizeEventStoreNode')].nodesPerStorageAccount]",
    "storageBinPackMap": [
      "[div(sub(add(1, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(2, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(3, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(4, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(5, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(6, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(7, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(8, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(9, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(10, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(11, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(12, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(13, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(14, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(15, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(16, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(17, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(18, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(19, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(20, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(21, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(22, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(23, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(24, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(25, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(26, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(27, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(28, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(29, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(30, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(31, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(32, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(33, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(34, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(35, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(36, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(37, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(38, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(39, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(40, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(51, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(52, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(53, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(54, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(55, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(56, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(57, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(58, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(59, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "[div(sub(add(60, variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]"
    ],
    "clusterNodeStorageSettings": {
      "count": "[div(sub(add(parameters('vmEventStoreNodeCount'), variables('eventStoreClusterNodesPerStorageAccount')), 1), variables('eventStoreClusterNodesPerStorageAccount'))]",
      "mapping": "[variables('storageBinPackMap')]",
      "accountType": "[variables('virtualMachineSkuSettings')[parameters('vmSizeEventStoreNode')].storageAccountType]",
      "prefix": "[concat(variables('storageAccountPrefix'), 'd', uniqueString(resourceGroup().id, deployment().name))]"
    },
    "clusterNodeTemplateUrl": "[concat(variables('templateBaseUrl'), 'cluster-nodes-', string(variables('virtualMachineSkuSettings')[parameters('vmSizeEventStoreNode')].dataDisks), 'disk-resources.json')]",
    "eventStoreDownloadMap": {
      "ubuntu": {
        "3.0.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Linux-v3.0.0.tar.gz",
        "3.0.1": "http://download.geteventstore.com/binaries/EventStore-OSS-Linux-v3.0.1.tar.gz",
        "3.0.2": "http://download.geteventstore.com/binaries/EventStore-OSS-Linux-v3.0.2.tar.gz",
        "3.0.3": "http://download.geteventstore.com/binaries/EventStore-OSS-Linux-v3.0.3.tar.gz",
        "3.0.5": "http://download.geteventstore.com/binaries/EventStore-OSS-Linux-v3.0.5.tar.gz",
        "3.1.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.1.0.tar.gz",
        "3.2.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.2.0.tar.gz",
        "3.2.1": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.2.1.tar.gz",
        "3.2.2": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.2.2.tar.gz",
        "3.3.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.3.0.tar.gz",
        "3.3.1": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.3.1.tar.gz",
        "3.4.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Ubuntu-v3.4.0.tar.gz"
      },
      "windows": {
        "3.0.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.0.0.zip",
        "3.0.1": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.0.1.zip",
        "3.0.2": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.0.2.zip",
        "3.0.3": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.0.3.zip",
        "3.0.5": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.0.5.zip",
        "3.1.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.1.0.zip",
        "3.2.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.2.0.zip",
        "3.2.1": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.2.1.zip",
        "3.2.2": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.2.2.zip",
        "3.3.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.3.0.zip",
        "3.3.1": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.3.1.zip",
        "3.4.0": "http://download.geteventstore.com/binaries/EventStore-OSS-Win-v3.4.0.zip"
      }
    }
  },
  "resources": [
    {
      "name": "shared",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "subnet": { "value": "eventstore" }
        }
      }
    },
    {
      "name": "cluster-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('clusterNodeTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "storageSettings": {
            "value": "[variables('clusterNodeStorageSettings')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.eventstore]"
          },
          "vmSize": {
            "value": "[parameters('vmSizeEventStoreNode')]"
          },
          "vmCount": {
            "value": "[parameters('vmEventStoreNodeCount')]"
          },
          "dataDiskSize": {
            "value": "[parameters('vmEventStoreDataDiskSize')]"
          },
          "namespace": {
            "value": "es"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    }
  ],
  "outputs": {
  }
}
